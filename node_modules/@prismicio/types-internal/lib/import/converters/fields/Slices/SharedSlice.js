"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sharedSliceConverter = void 0;
const uuid_1 = require("uuid");
const SharedSliceContent_1 = require("./SharedSliceContent");
// TODO should we put it together with SharedSliceId validator?
const buildSharedSliceId = (slice_type) => `${slice_type}$${(0, uuid_1.v4)()}`;
const sharedSliceConverter = (slice, assets, embeds) => {
    var _a, _b;
    // Right now we only support SharedSlices, if we support more types of slices in the future we'll need to select a correct converter here
    const widget = (0, SharedSliceContent_1.importSharedSliceContentConverter)(slice, assets, embeds);
    return {
        key: (_a = slice.id) !== null && _a !== void 0 ? _a : buildSharedSliceId(slice.slice_type),
        name: slice.slice_type,
        maybeLabel: (_b = slice.slice_label) !== null && _b !== void 0 ? _b : undefined,
        widget,
    };
};
exports.sharedSliceConverter = sharedSliceConverter;
