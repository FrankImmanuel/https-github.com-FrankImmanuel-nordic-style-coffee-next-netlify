"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.linkConverter = void 0;
const common_1 = require("../../../../common");
const webLinkConverter = (field) => ({
    value: {
        url: field.url,
        target: field.target,
        __TYPE__: "ExternalLink",
    },
    __TYPE__: "LinkContent",
});
const documentLinkConverter = (field) => ({
    value: {
        id: field.id,
        __TYPE__: "DocumentLink",
    },
    __TYPE__: "LinkContent",
});
const fileLinkConverter = (field, asset) => {
    var _a;
    return ({
        value: {
            id: field.id,
            url: asset.origin_url,
            name: (_a = asset.filename) !== null && _a !== void 0 ? _a : "unknown.jpg",
            kind: asset.kind,
            size: asset.size ? String(asset.size) : "0",
            __TYPE__: "FileLink",
        },
        __TYPE__: "LinkContent",
    });
};
const imageLinkConverter = (field, asset) => {
    var _a, _b, _c;
    return ({
        value: {
            id: field.id,
            url: asset.origin_url,
            height: String((_a = asset.height) !== null && _a !== void 0 ? _a : 1),
            width: String((_b = asset.width) !== null && _b !== void 0 ? _b : 1),
            name: (_c = asset.filename) !== null && _c !== void 0 ? _c : "unknown.jpg",
            kind: asset.kind,
            size: asset.size ? String(asset.size) : "0",
            __TYPE__: "ImageLink",
        },
        __TYPE__: "LinkContent",
    });
};
const linkConverter = (field, assets) => {
    if (field === null) {
        return;
    }
    switch (field.link_type) {
        case "Web":
            return webLinkConverter(field);
        case "Document":
            return documentLinkConverter(field);
        case "Media": {
            const asset = (0, common_1.getAssetOrThrow)(assets)(field.id);
            switch (asset.kind) {
                case "all":
                    return fileLinkConverter(field, asset);
                case "image":
                    return imageLinkConverter(field, asset);
            }
        }
    }
};
exports.linkConverter = linkConverter;
