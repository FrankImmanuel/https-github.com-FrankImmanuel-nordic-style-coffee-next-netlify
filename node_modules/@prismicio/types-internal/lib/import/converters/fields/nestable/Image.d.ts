import type { Asset } from "../../../../common";
import type { ImageContent } from "../../../../content";
import type { ImageField, ImportImage } from "../../../validators";
import type { ImportImageBlock } from "../../../validators/fields/nestable/ImportRichText/blocks";
export declare function convertImageView<Input extends ImageField | ImportImageBlock>(inputImage: Input, image: Asset): {
    origin: {
        id: string;
        url: string;
        width: number;
        height: number;
    };
    width: number;
    height: number;
    edit: {
        zoom: number;
        crop: {
            x: number;
            y: number;
        };
        background: string;
    };
} & {
    url?: string;
    credits?: string | null;
    alt?: string | null;
    provider?: string | null | undefined;
};
export declare const imageConverter: (imageField: ImportImage["value"], assets: Record<Asset["id"], Asset | undefined>) => ImageContent | undefined;
