import * as E from "fp-ts/Either";
import type { SharedSlice as SharedSliceCustomType } from "../../../../../customtypes";
import type { Variation } from "../../../../../customtypes";
export declare const findSlice: (slices: SharedSliceCustomType[]) => (sliceId: string) => E.Either<string, {
    id: string;
    type: "SharedSlice";
    name: string;
    variations: readonly ({
        id: string;
        name: string;
        description: string;
        imageUrl: string;
        docURL: string;
        version: string;
    } & {
        display?: string;
        primary?: {
            [x: string]: ({
                type: "Boolean";
            } & {
                config?: {
                    label?: string | null | undefined;
                    default_value?: boolean;
                    placeholder_true?: string;
                    placeholder_false?: string;
                };
            }) | ({
                type: "Color";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                };
            }) | ({
                type: "Date";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    default?: string;
                };
            }) | ({
                type: "Embed";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    useAsTitle?: boolean;
                };
            }) | ({
                type: "GeoPoint";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                };
            }) | ({
                type: "Image";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    constraint?: {
                        width?: number | null;
                        height?: number | null;
                    };
                    thumbnails?: readonly ({
                        name: string;
                    } & {
                        width?: number | null;
                        height?: number | null;
                    })[];
                };
            }) | ({
                type: "IntegrationFields";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    catalog?: string;
                };
            }) | ({
                type: "Link";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    useAsTitle?: boolean;
                    placeholder?: string;
                    select?: "media" | "document" | "web" | null;
                    customtypes?: readonly string[];
                    masks?: readonly string[];
                    tags?: readonly string[];
                    allowTargetBlank?: boolean;
                };
            }) | ({
                type: "Number";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    min?: number;
                    max?: number;
                    step?: number;
                };
            }) | ({
                type: "Range";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    min?: number;
                    max?: number;
                    step?: number;
                };
            }) | ({
                type: "StructuredText";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    useAsTitle?: boolean;
                    single?: string;
                    multi?: string;
                    imageConstraint?: {
                        width?: number | null;
                        height?: number | null;
                    };
                    labels?: readonly string[];
                    allowTargetBlank?: boolean;
                };
            }) | ({
                type: "Select";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    default_value?: string;
                    options?: readonly string[];
                };
            }) | ({
                type: "Separator";
            } & {
                config?: {
                    label?: string | null | undefined;
                };
            }) | ({
                type: "Text";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    useAsTitle?: boolean;
                    placeholder?: string;
                };
            }) | ({
                type: "Timestamp";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    default?: string;
                };
            });
        };
        items?: {
            [x: string]: ({
                type: "Boolean";
            } & {
                config?: {
                    label?: string | null | undefined;
                    default_value?: boolean;
                    placeholder_true?: string;
                    placeholder_false?: string;
                };
            }) | ({
                type: "Color";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                };
            }) | ({
                type: "Date";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    default?: string;
                };
            }) | ({
                type: "Embed";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    useAsTitle?: boolean;
                };
            }) | ({
                type: "GeoPoint";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                };
            }) | ({
                type: "Image";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    constraint?: {
                        width?: number | null;
                        height?: number | null;
                    };
                    thumbnails?: readonly ({
                        name: string;
                    } & {
                        width?: number | null;
                        height?: number | null;
                    })[];
                };
            }) | ({
                type: "IntegrationFields";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    catalog?: string;
                };
            }) | ({
                type: "Link";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    useAsTitle?: boolean;
                    placeholder?: string;
                    select?: "media" | "document" | "web" | null;
                    customtypes?: readonly string[];
                    masks?: readonly string[];
                    tags?: readonly string[];
                    allowTargetBlank?: boolean;
                };
            }) | ({
                type: "Number";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    min?: number;
                    max?: number;
                    step?: number;
                };
            }) | ({
                type: "Range";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    min?: number;
                    max?: number;
                    step?: number;
                };
            }) | ({
                type: "StructuredText";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    useAsTitle?: boolean;
                    single?: string;
                    multi?: string;
                    imageConstraint?: {
                        width?: number | null;
                        height?: number | null;
                    };
                    labels?: readonly string[];
                    allowTargetBlank?: boolean;
                };
            }) | ({
                type: "Select";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    default_value?: string;
                    options?: readonly string[];
                };
            }) | ({
                type: "Separator";
            } & {
                config?: {
                    label?: string | null | undefined;
                };
            }) | ({
                type: "Text";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    useAsTitle?: boolean;
                    placeholder?: string;
                };
            }) | ({
                type: "Timestamp";
            } & {
                fieldset?: string | null | undefined;
                config?: {
                    label?: string | null | undefined;
                    placeholder?: string;
                    default?: string;
                };
            });
        };
    })[];
} & {
    description?: string;
    legacyPaths?: {
        [x: string]: string;
    };
}>;
export declare const findSliceVariation: (slice: SharedSliceCustomType) => (variation: string) => E.Either<string, Variation>;
