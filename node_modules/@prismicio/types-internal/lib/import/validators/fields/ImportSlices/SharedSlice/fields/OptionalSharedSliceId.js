"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OptionalSharedSliceId = void 0;
const tslib_1 = require("tslib");
const t = (0, tslib_1.__importStar)(require("io-ts"));
const SharedSliceId_1 = require("./SharedSliceId");
// Wrapping the 'SharedSliceId' codec in an optional codec here for the sake of error reporting.
// When using t.union([t.undefined, t.null, SharedSliceId]) we get a nested error context
// with the actual decoding error at position 2 in the context array.
// To avoid mutating the error context we create this new wrapper codec so that  the error context will always have desired depth.
exports.OptionalSharedSliceId = new t.Type("OptionalSharedSliceId", (u) => u === null || u === undefined || SharedSliceId_1.SharedSliceId.is(u), (u, c) => {
    if (u === null || u === undefined)
        return t.success(u);
    return SharedSliceId_1.SharedSliceId.validate(u, c);
}, t.identity);
