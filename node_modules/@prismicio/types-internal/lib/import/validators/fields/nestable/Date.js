"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportDate = void 0;
const tslib_1 = require("tslib");
const Either_1 = require("fp-ts/Either");
const function_1 = require("fp-ts/function");
const t = (0, tslib_1.__importStar)(require("io-ts"));
const validators_1 = require("../../../../validators");
const ImportContent_1 = require("../ImportContent");
const DATE_INPUT_REGEX = /^(\d{1,4})-(\d{1,2})-(\d{1,2})$/;
const dateValue = new t.Type("ImportNumberValue", (u) => u instanceof Date, (u, c) => (0, function_1.pipe)(validators_1.String.validate(u, c), (0, Either_1.chain)((s) => {
    const date = new Date(s);
    const isInvalidDate = isNaN(date.getTime());
    if (isInvalidDate || !DATE_INPUT_REGEX.test(s)) {
        return t.failure(u, c, "The value must be a Date in the format YYYY-MM-DD");
    }
    return t.success(date);
})), t.identity);
exports.ImportDate = (0, ImportContent_1.ImportContent)("Date", (0, validators_1.NullOrElse)(dateValue));
