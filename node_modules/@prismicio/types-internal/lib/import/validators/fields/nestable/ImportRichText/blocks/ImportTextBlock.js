"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportTextBlock = exports.ImportTextBlockType = exports.ImportTextBlockTypes = void 0;
const tslib_1 = require("tslib");
const t = (0, tslib_1.__importStar)(require("io-ts"));
const validators_1 = require("../../../../../../validators");
const function_1 = require("../../../../../../validators/function");
const Span_1 = require("./Span");
exports.ImportTextBlockTypes = {
    Paragraph: "paragraph",
    OListItem: "o-list-item",
    ListItem: "list-item",
    Heading1: "heading1",
    Heading2: "heading2",
    Heading3: "heading3",
    Heading4: "heading4",
    Heading5: "heading5",
    Heading6: "heading6",
    Preformatted: "preformatted",
};
exports.ImportTextBlockType = t.keyof({
    [exports.ImportTextBlockTypes.Paragraph]: null,
    [exports.ImportTextBlockTypes.OListItem]: null,
    [exports.ImportTextBlockTypes.ListItem]: null,
    [exports.ImportTextBlockTypes.Heading1]: null,
    [exports.ImportTextBlockTypes.Heading2]: null,
    [exports.ImportTextBlockTypes.Heading3]: null,
    [exports.ImportTextBlockTypes.Heading4]: null,
    [exports.ImportTextBlockTypes.Heading5]: null,
    [exports.ImportTextBlockTypes.Heading6]: null,
    [exports.ImportTextBlockTypes.Preformatted]: null,
});
const TextDirection = (0, function_1.withCustomError)(t.union([t.literal("ltr"), t.literal("rtl")]), () => "The 'direction' property must be one of the following: ltr, rtl");
exports.ImportTextBlock = t.exact(t.intersection([
    t.type({
        type: exports.ImportTextBlockType,
        text: validators_1.String,
    }),
    t.partial({
        spans: (0, function_1.withCustomError)(t.array(Span_1.Span), () => "The 'spans' field must be an array"),
        direction: TextDirection,
    }),
]));
