"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Span = void 0;
const tslib_1 = require("tslib");
const t = (0, tslib_1.__importStar)(require("io-ts"));
const function_1 = require("../../../../../../validators/function");
const spans_1 = require("./spans");
const LabelSpan_1 = require("./spans/LabelSpan");
const SpanType = (0, function_1.withCustomError)(t.union([spans_1.HyperlinkSpanType, spans_1.TextSpanType, LabelSpan_1.LabelSpanType]), () => `Span 'type' field must be specified and have one of the following values: ${[
    ...Object.keys(spans_1.TextSpanType.keys),
    LabelSpan_1.LabelSpanType.value,
].join(", ")} or ${spans_1.HyperlinkSpanType.value}`);
const SpanTypeValidator = (0, function_1.withCustomError)(t.type({
    type: SpanType,
}), () => "Span must be an object");
const SpanShape = t.union([spans_1.HyperlinkSpan, spans_1.TextSpan, LabelSpan_1.LabelSpan]);
exports.Span = SpanTypeValidator.pipe(new t.Type("Span", (u) => SpanShape.is(u), (u, c) => {
    if (spans_1.HyperlinkSpanType.is(u.type)) {
        return spans_1.HyperlinkSpan.validate(u, c);
    }
    else if (LabelSpan_1.LabelSpanType.is(u.type)) {
        return LabelSpan_1.LabelSpan.validate(u, c);
    }
    else {
        return spans_1.TextSpan.validate(u, c);
    }
}, t.identity));
