import * as t from "io-ts";
export declare const ImportTextBlockTypes: {
    readonly Paragraph: "paragraph";
    readonly OListItem: "o-list-item";
    readonly ListItem: "list-item";
    readonly Heading1: "heading1";
    readonly Heading2: "heading2";
    readonly Heading3: "heading3";
    readonly Heading4: "heading4";
    readonly Heading5: "heading5";
    readonly Heading6: "heading6";
    readonly Preformatted: "preformatted";
};
export declare const ImportTextBlockType: t.KeyofC<{
    paragraph: null;
    "o-list-item": null;
    "list-item": null;
    heading1: null;
    heading2: null;
    heading3: null;
    heading4: null;
    heading5: null;
    heading6: null;
    preformatted: null;
}>;
export declare type ImportTextBlockType = t.TypeOf<typeof ImportTextBlockType>;
export declare const ImportTextBlock: t.ExactC<t.IntersectionC<[t.TypeC<{
    type: t.KeyofC<{
        paragraph: null;
        "o-list-item": null;
        "list-item": null;
        heading1: null;
        heading2: null;
        heading3: null;
        heading4: null;
        heading5: null;
        heading6: null;
        preformatted: null;
    }>;
    text: t.StringC;
}>, t.PartialC<{
    spans: t.ArrayC<t.Type<({
        type: "hyperlink";
    } & {
        start: number;
        end: number;
    } & {
        data: ({
            link_type: "Web";
            url: string;
        } & {
            target?: string;
        }) | {
            link_type: "Document";
            id: string;
        } | {
            link_type: "Media";
            id: string;
        };
    }) | ({
        type: "strong" | "em";
    } & {
        start: number;
        end: number;
    }) | ({
        type: "label";
        data: {
            label: string;
        };
    } & {
        start: number;
        end: number;
    }), {
        type: "label" | "strong" | "em" | "hyperlink";
    }, unknown>>;
    direction: t.UnionC<[t.LiteralC<"ltr">, t.LiteralC<"rtl">]>;
}>]>>;
export declare type ImportTextBlock = t.TypeOf<typeof ImportTextBlock>;
