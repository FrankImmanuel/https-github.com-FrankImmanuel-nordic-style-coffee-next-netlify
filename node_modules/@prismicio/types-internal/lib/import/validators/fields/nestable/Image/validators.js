"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportImageWithThumbnails = exports.ImportImageView = exports.ImportImageViewShape = void 0;
const tslib_1 = require("tslib");
const t = (0, tslib_1.__importStar)(require("io-ts"));
const BasicTypes_1 = require("../../../../../validators/BasicTypes");
const function_1 = require("../../../../../validators/function");
exports.ImportImageViewShape = t.intersection([
    t.type({
        // Image Id
        id: BasicTypes_1.String,
    }),
    t.partial({
        // Dimensions here will be used if they are not defined in the custom type
        dimensions: (0, function_1.withCustomError)(t.partial({
            width: BasicTypes_1.Number,
            height: BasicTypes_1.Number,
        }), () => "The value must be an object"),
        // Crop information
        edit: (0, function_1.withCustomError)(t.partial({
            x: BasicTypes_1.Number,
            y: BasicTypes_1.Number,
            zoom: BasicTypes_1.Number,
            background: BasicTypes_1.String,
        }), () => "The value must be an object"),
        // Copyrights and alt are set in the Asset by default but they can be overrided
        copyright: BasicTypes_1.StringOrNull,
        alt: BasicTypes_1.StringOrNull,
    }),
]);
exports.ImportImageView = (0, function_1.withCustomError)(exports.ImportImageViewShape, () => "The value must be an object");
const ImportThumbnails = (thumbnails) => t.partial(thumbnails.reduce((acc, thumbnail) => ({
    ...acc,
    [thumbnail.name]: exports.ImportImageView,
}), {}));
const ImportImageWithThumbnails = (def) => {
    var _a, _b;
    return (0, function_1.withCustomError)(t.intersection([
        exports.ImportImageViewShape,
        ImportThumbnails((_b = (_a = def === null || def === void 0 ? void 0 : def.config) === null || _a === void 0 ? void 0 : _a.thumbnails) !== null && _b !== void 0 ? _b : []),
    ]), () => "The value must be an object");
};
exports.ImportImageWithThumbnails = ImportImageWithThumbnails;
